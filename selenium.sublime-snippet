<snippet>
	<content><![CDATA[
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import NoSuchElementException

options = webdriver.ChromeOptions()

# You can set headless
# options.add_argument("--headless")

options.add_argument('--no-sandbox')
# options.add_argument("--incognito")
options.add_experimental_option("excludeSwitches", ["enable-automation"])
options.add_experimental_option('useAutomationExtension', False)
options.add_argument("disable-infobars")
options.add_argument('--user-data-dir=folder_name')


from selenium.webdriver.chrome.service import Service as ChromeService
# options = webdriver.ChromeOptions()
service = ChromeService(executable_path='chromedriver')
driver = webdriver.Chrome(service=service, options=options)

#url of the page we want to scrape
url = "${1:url}"

driver.get(url)
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>sele</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.python</scope>
	<description>Selenium Startup Snippet</description>
</snippet>
